name: Swift CI

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]
    paths:
      - '**/*.swift'

jobs:
  build-and-test:
    name: Build & Test (XcodeProjectForCICD)
    runs-on:
      - self-hosted
      - label-1

    steps:
      - name: Checkout source code
        uses: actions/checkout@v4

      - name: Show macOS and Xcode info
        run: |
          sw_vers
          xcodebuild -version
          swift --version
          ls /Applications | grep Xcode

      - name: Set up Xcode 16.4
        run: sudo xcode-select -s /Applications/Xcode.app

      - name: Show available simulators
        run: |
          xcrun simctl list devices
          echo "Booted Simulators:"
          xcrun simctl list devices | grep Booted

      - name: Setup Homebrew PATH (Apple Silicon)
        run: |
          echo 'eval "$(/opt/homebrew/bin/brew shellenv)"' >> ~/.zprofile
          eval "$(/opt/homebrew/bin/brew shellenv)"

      - name: Install SwiftLint
        run: |
          eval "$(/opt/homebrew/bin/brew shellenv)"
          brew install swiftlint

      - name: Run SwiftLint
        run: swiftlint

      - name: Install reviewdog (locally)
        run: |
          mkdir -p "$HOME/.local/bin"
          curl -sfL https://raw.githubusercontent.com/reviewdog/reviewdog/master/install.sh | sh -s -- -b "$HOME/.local/bin"
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Check reviewdog version
        run: $HOME/.local/bin/reviewdog -version

      - name: Run SwiftLint with Reviewdog
        run: |
          swiftlint --reporter "checkstyle" | $HOME/.local/bin/reviewdog \
            -efm="%f:%l:%c: %m" \
            -name="swiftlint" \
            -reporter=github-pr-review \
            -fail-on-error=false \
            -level=warning
        env:
          REVIEWDOG_GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Uncomment and update if needed:
      # - name: Build project with Xcode
      #   run: |
      #     xcodebuild build \
      #     -project XcodeProjectForCICD.xcodeproj \
      #     -scheme XcodeProjectForCICD \
      #     -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.5'

      # - name: Run Unit Tests
      #   run: |
      #     xcodebuild test \
      #     -project XcodeProjectForCICD.xcodeproj \
      #     -scheme XcodeProjectForCICD \
      #     -destination 'platform=iOS Simulator,name=iPhone 16 Pro,OS=18.5' \
      #     -enableCodeCoverage YES

      # Replace below with actual paths
      - name: Upload Code Coverage Report
        uses: actions/upload-artifact@v4
        with:
          name: CodeCoverageReport
          path: path/to/code-coverage.txt

      - name: Upload All CI Logs
        uses: actions/upload-artifact@v4
        with:
          name: AllLogs
          path: logs/*.log

      - name: Upload Xcode Result Bundle
        uses: actions/upload-artifact@v4
        with:
          name: XcodeResultBundle
          path: result.bundle
